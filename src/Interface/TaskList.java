/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import database.Connect;
import java.sql.*; 
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class TaskList extends javax.swing.JFrame {

    /**
     * Creates new form TaskList
     */
    public TaskList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIntro = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        titleInput = new javax.swing.JTextField();
        descInput = new javax.swing.JTextField();
        addtask = new javax.swing.JButton();
        idInput = new javax.swing.JTextField();
        taskcomplete = new javax.swing.JButton();
        showTasks = new javax.swing.JButton();
        signout = new javax.swing.JButton();
        showTask2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TaskList = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        lblIntro.setFont(new java.awt.Font("Palatino Linotype", 0, 32)); // NOI18N
        lblIntro.setText("Welcome to");

        jLabel1.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 64)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(99, 88, 220));
        jLabel1.setText("Todo List");

        titleInput.setForeground(new java.awt.Color(128, 128, 128));
        titleInput.setText("     Complete Work Assignment");
        titleInput.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        descInput.setForeground(new java.awt.Color(128, 128, 128));
        descInput.setText("     Complete The I/O Notes Task");
        descInput.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        descInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descInputActionPerformed(evt);
            }
        });

        addtask.setBackground(new java.awt.Color(99, 88, 220));
        addtask.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addtask.setForeground(new java.awt.Color(255, 255, 255));
        addtask.setText("ADD TASK");
        addtask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtaskActionPerformed(evt);
            }
        });

        idInput.setForeground(new java.awt.Color(128, 128, 128));
        idInput.setText("     ");
        idInput.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        idInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idInputActionPerformed(evt);
            }
        });

        taskcomplete.setBackground(new java.awt.Color(99, 88, 220));
        taskcomplete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        taskcomplete.setForeground(new java.awt.Color(255, 255, 255));
        taskcomplete.setText("Mark Task As Completed");
        taskcomplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taskcompleteActionPerformed(evt);
            }
        });

        showTasks.setBackground(new java.awt.Color(99, 88, 220));
        showTasks.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        showTasks.setForeground(new java.awt.Color(255, 255, 255));
        showTasks.setText("Show Tasks");
        showTasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTasksActionPerformed(evt);
            }
        });

        signout.setBackground(new java.awt.Color(99, 88, 220));
        signout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        signout.setForeground(new java.awt.Color(255, 255, 255));
        signout.setText("Sign Out");
        signout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signoutActionPerformed(evt);
            }
        });

        showTask2.setBackground(new java.awt.Color(99, 88, 220));
        showTask2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        showTask2.setForeground(new java.awt.Color(255, 255, 255));
        showTask2.setText("Refresh");
        showTask2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTask2ActionPerformed(evt);
            }
        });

        TaskList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Task Name", "Task Desc"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TaskList);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(99, 88, 220));
        jLabel2.setText("Task Title");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(99, 88, 220));
        jLabel3.setText("Task Description");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(99, 88, 220));
        jLabel4.setText("Task ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(157, 157, 157))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblIntro)
                        .addGap(249, 249, 249))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(showTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(165, 165, 165)
                        .addComponent(showTask2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(signout, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addtask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(descInput, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                                        .addComponent(titleInput, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(taskcomplete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(idInput))))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblIntro, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleInput, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(5, 5, 5)
                .addComponent(descInput, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addtask, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(12, 12, 12)
                .addComponent(idInput, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(taskcomplete, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showTasks, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(signout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showTask2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void signoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signoutActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        home n = new home();
        n.setVisible(true);
    }//GEN-LAST:event_signoutActionPerformed

    private void descInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descInputActionPerformed
        // TODO add your handling code here:
        JTextField textField = new JTextField();
        textField.setHorizontalAlignment(JTextField.TOP);
    }//GEN-LAST:event_descInputActionPerformed

    private void showTasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTasksActionPerformed
        // TODO add your handling code here:
        showTask();
    }//GEN-LAST:event_showTasksActionPerformed

    private void taskcompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taskcompleteActionPerformed
        // TODO add your handling code here:
        int t = Integer.parseInt(idInput.getText().trim());

        try {
            // Establish a connection
            Connection con = conn.getConnection();

            // Use PreparedStatement for better security and to avoid SQL injection
            String query = "DELETE FROM TASKLIST WHERE TASKID = ?";
            PreparedStatement pst = con.prepareStatement(query);

            // Set the TASKID parameter
            pst.setInt(1, t);

            // Execute the update
            int rowsAffected = pst.executeUpdate();

            // Show a message if the task was deleted successfully
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Task Deleted - Refresh to see updated Task List");
            } else {
                JOptionPane.showMessageDialog(null, "No task found with the specified ID.");
            }

            // Close the statement and connection
            pst.close();
            con.close();

        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_taskcompleteActionPerformed

    private void idInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idInputActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_idInputActionPerformed

    private void showTask2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTask2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) TaskList.getModel();
        model.setRowCount(0);
        showTask();
    }//GEN-LAST:event_showTask2ActionPerformed

    private void addtaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtaskActionPerformed
        // TODO add your handling code here:
        String title = titleInput.getText();
        String desc = descInput.getText();
        String id = idInput.getText().trim();
        try{
            Connection con = conn.getConnection();
            String query = "INSERT INTO TASKLIST (TASKID,TASKNAME,TASKDESC) VALUES (?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(query);
            
            pst.setInt(1, Integer.parseInt(id)); // Convert id to integer
            pst.setString(2, title);
            pst.setString(3, desc);
            
            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Task Added - Refresh to see updated Task List");
            } else {
            JOptionPane.showMessageDialog(null, "Task could not be added.");
            }
            pst.close();
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_addtaskActionPerformed
    public Connect conn = new Connect();
    private void showTask(){
        ResultSet rs = null;
        Statement st = null;
        Connection con = null;
        try{
            con = conn.getConnection();
            st = con.createStatement();
            String query = "SELECT * FROM TASKLIST";
            rs = st.executeQuery(query);
            
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) TaskList.getModel();
            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            
            for(int i=0;i<cols;i++){
                colName[i] = rsmd.getColumnName(i+1);
            }
            model.setColumnIdentifiers(colName);
            
            while(rs.next()){
                String taskID = rs.getString(1);
                String taskName = rs.getString(2);
                String taskDesc = rs.getString(3);
                String[] row = {taskID,taskName,taskDesc};
                model.addRow(row);
            }
            st.close();
            con.close();
            rs.close();
            signout.setVisible(true);
            showTasks.setVisible(false);
        }catch(SQLException e){
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaskList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaskList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaskList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaskList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TaskList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TaskList;
    private javax.swing.JButton addtask;
    private javax.swing.JTextField descInput;
    private javax.swing.JTextField idInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblIntro;
    private javax.swing.JButton showTask2;
    private javax.swing.JButton showTasks;
    private javax.swing.JButton signout;
    private javax.swing.JButton taskcomplete;
    private javax.swing.JTextField titleInput;
    // End of variables declaration//GEN-END:variables
}
