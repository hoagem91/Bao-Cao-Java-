/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import database.Connect;
import java.sql.*; 
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class TaskList extends javax.swing.JFrame {

    /**
     * Creates new form TaskList
     */
    public TaskList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIntro = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        titleInput = new javax.swing.JTextField();
        descInput = new javax.swing.JTextField();
        addtask = new javax.swing.JButton();
        idXoa = new javax.swing.JTextField();
        taskcomplete = new javax.swing.JButton();
        showTasks = new javax.swing.JButton();
        signout = new javax.swing.JButton();
        showTask2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TaskList = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        validatorName = new javax.swing.JLabel();
        idInput = new javax.swing.JTextField();
        validatorDesc = new javax.swing.JLabel();
        validatorDelete = new javax.swing.JLabel();
        validatorID = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblIntro.setFont(new java.awt.Font("Palatino Linotype", 0, 32)); // NOI18N
        lblIntro.setForeground(new java.awt.Color(0, 0, 0));
        lblIntro.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblIntro.setText("Welcome to");
        getContentPane().add(lblIntro, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, -1, 40));

        jLabel1.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 64)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(99, 88, 220));
        jLabel1.setText("Todo List");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, -1, 60));

        titleInput.setBackground(new java.awt.Color(204, 204, 204));
        titleInput.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        titleInput.setForeground(new java.awt.Color(0, 0, 0));
        titleInput.setText("     Complete Work Assignment");
        titleInput.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().add(titleInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 509, 44));

        descInput.setBackground(new java.awt.Color(204, 204, 204));
        descInput.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        descInput.setForeground(new java.awt.Color(0, 0, 0));
        descInput.setText("     Complete The I/O Notes Task");
        descInput.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        descInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descInputActionPerformed(evt);
            }
        });
        getContentPane().add(descInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 509, 152));

        addtask.setBackground(new java.awt.Color(99, 88, 220));
        addtask.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addtask.setForeground(new java.awt.Color(255, 255, 255));
        addtask.setText("THÊM CÔNG VIỆC");
        addtask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtaskActionPerformed(evt);
            }
        });
        getContentPane().add(addtask, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 540, 509, 49));

        idXoa.setBackground(new java.awt.Color(204, 204, 204));
        idXoa.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        idXoa.setForeground(new java.awt.Color(0, 0, 0));
        idXoa.setText("     ");
        idXoa.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        idXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idXoaActionPerformed(evt);
            }
        });
        getContentPane().add(idXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 620, 509, 44));

        taskcomplete.setBackground(new java.awt.Color(99, 88, 220));
        taskcomplete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        taskcomplete.setForeground(new java.awt.Color(255, 255, 255));
        taskcomplete.setText("XÓA HOẶC HOÀN THÀNH CÔNG VIỆC");
        taskcomplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taskcompleteActionPerformed(evt);
            }
        });
        getContentPane().add(taskcomplete, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 700, 508, 49));

        showTasks.setBackground(new java.awt.Color(99, 88, 220));
        showTasks.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        showTasks.setForeground(new java.awt.Color(255, 255, 255));
        showTasks.setText("Show Tasks");
        showTasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTasksActionPerformed(evt);
            }
        });
        getContentPane().add(showTasks, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 920, -1, 44));

        signout.setBackground(new java.awt.Color(99, 88, 220));
        signout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        signout.setForeground(new java.awt.Color(255, 255, 255));
        signout.setText("Sign Out");
        signout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signoutActionPerformed(evt);
            }
        });
        getContentPane().add(signout, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 920, 92, 44));

        showTask2.setBackground(new java.awt.Color(99, 88, 220));
        showTask2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        showTask2.setForeground(new java.awt.Color(255, 255, 255));
        showTask2.setText("Refresh");
        showTask2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTask2ActionPerformed(evt);
            }
        });
        getContentPane().add(showTask2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 920, 95, 44));

        TaskList.setBackground(new java.awt.Color(204, 204, 204));
        TaskList.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        TaskList.setForeground(new java.awt.Color(0, 0, 0));
        TaskList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Tên Công Việc", "Mô Tả Công Việc"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TaskList);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 760, 508, 140));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(99, 88, 220));
        jLabel2.setText("Tên Công Việc");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(99, 88, 220));
        jLabel3.setText("Mô tả công việc");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(99, 88, 220));
        jLabel4.setText("ID Xóa Hoặc Hoàn Thành ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 600, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(99, 88, 220));
        jLabel5.setText("ID Công Việc");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, -1, -1));

        validatorName.setForeground(new java.awt.Color(255, 0, 51));
        validatorName.setToolTipText("");
        getContentPane().add(validatorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, -1, -1));

        idInput.setBackground(new java.awt.Color(204, 204, 204));
        idInput.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        idInput.setForeground(new java.awt.Color(0, 0, 0));
        idInput.setText("     ");
        idInput.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        idInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idInputActionPerformed(evt);
            }
        });
        getContentPane().add(idInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 509, 44));

        validatorDesc.setForeground(new java.awt.Color(255, 0, 51));
        validatorDesc.setToolTipText("");
        getContentPane().add(validatorDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 520, -1, -1));

        validatorDelete.setForeground(new java.awt.Color(255, 0, 51));
        validatorDelete.setToolTipText("");
        getContentPane().add(validatorDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 670, -1, -1));

        validatorID.setForeground(new java.awt.Color(255, 0, 51));
        validatorID.setToolTipText("");
        getContentPane().add(validatorID, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/backgroudTaskList.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 673, 980));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void signoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signoutActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        home n = new home();
        n.setVisible(true);
    }//GEN-LAST:event_signoutActionPerformed

    private void showTasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTasksActionPerformed
        // TODO add your handling code here:
        showTask();
    }//GEN-LAST:event_showTasksActionPerformed

    private void taskcompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taskcompleteActionPerformed
        // TODO add your handling code here:
        String id = idXoa.getText().trim();
        if(id.trim().isEmpty()){
            validatorDelete.setText("Vui lòng nhập ID cần xóa!");
            return;
        }
        else{
            validatorDelete.setText("");
        }
        int t;
        try{
            t = Integer.parseInt(id);
        }catch(NumberFormatException e){
            validatorDelete.setText("Vui lòng nhập ID phải là số nguyên!");
            return;
        } 
        try {
            // Establish a connection
            Connection con = conn.getConnection();

            // Use PreparedStatement for better security and to avoid SQL injection
            String query = "DELETE FROM TASKLIST WHERE TASKID = ?";
            PreparedStatement pst = con.prepareStatement(query);

            // Set the TASKID parameter
            pst.setInt(1,t);

            // Execute the update
            int rowsAffected = pst.executeUpdate();

            // Show a message if the task was deleted successfully
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Task Deleted - Refresh to see updated Task List");
            } else {
                JOptionPane.showMessageDialog(null, "No task found with the specified ID.");
            }

            // Close the statement and connection
            pst.close();
            con.close();

        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_taskcompleteActionPerformed

    private void idXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idXoaActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_idXoaActionPerformed

    private void addtaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtaskActionPerformed
        // TODO add your handling code here:
        String title = titleInput.getText().trim();
        String desc = descInput.getText().trim();
        String id = idInput.getText().trim();
        if(title.isEmpty()){
            validatorName.setText("Vui lòng nhập tên công việc!");
        }
        else{
            validatorName.setText("");
        }
        if(desc.isEmpty()){
            validatorDesc.setText("Vui lòng nhập mô tả công việc!");
        }
        else{
            validatorDesc.setText("");
        }
        if(id.isEmpty()){
            validatorID.setText("Vui lòng nhập ID!");
        }
        
        int idTask;
        try{
            idTask = Integer.parseInt(id);
        }catch(NumberFormatException e){
            validatorID.setText("Vui lòng nhập ID phải là số nguyên!");
        }   
        try{
            Connection con = conn.getConnection();
            String query = "INSERT INTO TASKLIST (TASKID,TASKNAME,TASKDESC) VALUES (?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(query);

            pst.setInt(1, Integer.parseInt(id)); // Convert id to integer
            pst.setString(2, title);
            pst.setString(3, desc);

            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Task Added - Refresh to see updated Task List");
            } else {
                JOptionPane.showMessageDialog(null, "Task could not be added.");
            }
            pst.close();
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_addtaskActionPerformed

    private void descInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descInputActionPerformed
        // TODO add your handling code here:
        JTextField textField = new JTextField();
        textField.setHorizontalAlignment(JTextField.TOP);
    }//GEN-LAST:event_descInputActionPerformed

    private void showTask2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTask2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) TaskList.getModel();
        model.setRowCount(0);
        idInput.setText("");
        titleInput.setText("");
        descInput.setText("");
        idXoa.setText("");
        validatorDelete.setText("");
        validatorID.setText("");
        validatorName.setText("");
        validatorDesc.setText("");
        
        showTask();
    }//GEN-LAST:event_showTask2ActionPerformed

    private void idInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idInputActionPerformed
    public Connect conn = new Connect();
    private void showTask(){
        ResultSet rs = null;
        Statement st = null;
        Connection con = null;
        try{
            con = conn.getConnection();
            st = con.createStatement();
            String query = "SELECT * FROM TASKLIST";
            rs = st.executeQuery(query);
            
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) TaskList.getModel();
            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            
            for(int i=0;i<cols;i++){
                colName[i] = rsmd.getColumnName(i+1);
            }
            model.setColumnIdentifiers(colName);
            
            while(rs.next()){
                String taskID = rs.getString(1);
                String taskName = rs.getString(2);
                String taskDesc = rs.getString(3);
                String[] row = {taskID,taskName,taskDesc};
                model.addRow(row);
            }
            st.close();
            con.close();
            rs.close();
            signout.setVisible(true);
            showTasks.setVisible(false);
        }catch(SQLException e){
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaskList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaskList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaskList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaskList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TaskList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TaskList;
    private javax.swing.JButton addtask;
    private javax.swing.JTextField descInput;
    private javax.swing.JTextField idInput;
    private javax.swing.JTextField idXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblIntro;
    private javax.swing.JButton showTask2;
    private javax.swing.JButton showTasks;
    private javax.swing.JButton signout;
    private javax.swing.JButton taskcomplete;
    private javax.swing.JTextField titleInput;
    private javax.swing.JLabel validatorDelete;
    private javax.swing.JLabel validatorDesc;
    private javax.swing.JLabel validatorID;
    private javax.swing.JLabel validatorName;
    // End of variables declaration//GEN-END:variables
}
