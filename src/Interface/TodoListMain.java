/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import DAO.Task;
import DAO.TaskDAO;
import database.Connect;
import java.awt.Color;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class TodoListMain extends javax.swing.JFrame {

    /**
     * Creates new form TodoListMain
     */
    public TodoListMain() {
        initComponents();
        showTask();
        showDate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TaskList = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        idInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        titleInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        descInput = new javax.swing.JTextField();
        deadLine = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        createDate = new javax.swing.JTextField();
        addtask = new javax.swing.JButton();
        deleteTask = new javax.swing.JButton();
        updateTask = new javax.swing.JButton();
        showTask2 = new javax.swing.JButton();
        signout = new javax.swing.JButton();
        validatordecs = new javax.swing.JLabel();
        validatorId = new javax.swing.JLabel();
        validatorName = new javax.swing.JLabel();
        deadlineValidator = new javax.swing.JLabel();
        validatorSearch = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1270, 680));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(99, 88, 220));
        jLabel5.setText("Tìm kiếm");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 90, -1));

        txtSearch.setBackground(new java.awt.Color(204, 204, 204));
        txtSearch.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        txtSearch.setText("     ");
        txtSearch.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 400, 44));

        TaskList.setBackground(new java.awt.Color(204, 204, 204));
        TaskList.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        TaskList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Tên Công Việc", "Mô Tả Công Việc", "Ngày Tạo ", "Ngày Hoàn Thành"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TaskList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TaskListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TaskList);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1270, 190));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(99, 88, 220));
        jLabel9.setText("ID Công Việc");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 90, -1));

        idInput.setBackground(new java.awt.Color(204, 204, 204));
        idInput.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        idInput.setText("     ");
        idInput.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        idInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idInputActionPerformed(evt);
            }
        });
        getContentPane().add(idInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 280, 400, 44));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(99, 88, 220));
        jLabel2.setText("Tên Công Việc");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, -1));

        titleInput.setBackground(new java.awt.Color(204, 204, 204));
        titleInput.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        titleInput.setText("     Complete Work Assignment");
        titleInput.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().add(titleInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, 400, 44));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(99, 88, 220));
        jLabel3.setText("Mô tả công việc");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, -1, -1));

        descInput.setBackground(new java.awt.Color(204, 204, 204));
        descInput.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        descInput.setText("     Complete The I/O Notes Task");
        descInput.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        descInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descInputActionPerformed(evt);
            }
        });
        getContentPane().add(descInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 440, 400, 40));

        deadLine.setBackground(new java.awt.Color(204, 204, 204));
        deadLine.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        deadLine.setText("     ");
        deadLine.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        deadLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deadLineActionPerformed(evt);
            }
        });
        getContentPane().add(deadLine, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 440, 210, 44));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(99, 88, 220));
        jLabel7.setText("Ngày Khởi Tạo");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 380, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(99, 88, 220));
        jLabel8.setText("Ngày Hoàn Thành");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 450, -1, -1));

        createDate.setBackground(new java.awt.Color(204, 204, 204));
        createDate.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        createDate.setText("     ");
        createDate.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        createDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDateActionPerformed(evt);
            }
        });
        getContentPane().add(createDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 360, 210, 44));

        addtask.setBackground(new java.awt.Color(99, 88, 220));
        addtask.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addtask.setForeground(new java.awt.Color(255, 255, 255));
        addtask.setText("THÊM CÔNG VIỆC");
        addtask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtaskActionPerformed(evt);
            }
        });
        getContentPane().add(addtask, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 530, 160, 49));

        deleteTask.setBackground(new java.awt.Color(99, 88, 220));
        deleteTask.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteTask.setForeground(new java.awt.Color(255, 255, 255));
        deleteTask.setText("XÓA CÔNG VIỆC");
        deleteTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTaskActionPerformed(evt);
            }
        });
        getContentPane().add(deleteTask, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 530, 170, 49));

        updateTask.setBackground(new java.awt.Color(99, 88, 220));
        updateTask.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateTask.setForeground(new java.awt.Color(255, 255, 255));
        updateTask.setText("SỬA CÔNG VIỆC");
        updateTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTaskActionPerformed(evt);
            }
        });
        getContentPane().add(updateTask, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 530, 170, 49));

        showTask2.setBackground(new java.awt.Color(99, 88, 220));
        showTask2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        showTask2.setForeground(new java.awt.Color(255, 255, 255));
        showTask2.setText("Refresh");
        showTask2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTask2ActionPerformed(evt);
            }
        });
        getContentPane().add(showTask2, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 530, 140, 50));

        signout.setBackground(new java.awt.Color(99, 88, 220));
        signout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        signout.setForeground(new java.awt.Color(255, 255, 255));
        signout.setText("Sign Out");
        signout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signoutActionPerformed(evt);
            }
        });
        getContentPane().add(signout, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 530, 140, 50));
        getContentPane().add(validatordecs, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 490, -1, -1));
        getContentPane().add(validatorId, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, -1, -1));
        getContentPane().add(validatorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 410, -1, -1));

        deadlineValidator.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(deadlineValidator, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 490, -1, -1));
        getContentPane().add(validatorSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public Connect conn = new Connect();
    
    private void showTask() {
        TaskDAO taskDAO = new TaskDAO(); // Tạo đối tượng TaskDAO
        List<Task> tasks = taskDAO.getAllTasks(); // Lấy danh sách các task

        DefaultTableModel model = (DefaultTableModel) TaskList.getModel();

        // Xóa các hàng cũ để tránh trùng lặp dữ liệu
        model.setRowCount(0);

        // Cập nhật tiêu đề cột (có thể sử dụng phương thức từ TaskDAO hoặc tự định nghĩa)
        String[] columnNames = {"Task ID", "Task Name", "Description", "Create Date", "Deadline"};
        model.setColumnIdentifiers(columnNames);

        // Thêm dữ liệu vào bảng từ danh sách task
        for (Task task : tasks) {
            Object[] row = new Object[5]; // Vì có 6 cột
            row[0] = task.getId();
            row[1] = task.getName();
            row[2] = task.getDescription();
            row[3] = task.getCreateDate();
            row[4] = task.getDeadline();

            model.addRow(row); // Thêm từng dòng vào bảng
        }

        // Cập nhật trạng thái các nút
        signout.setVisible(true);
    }

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
        // Lấy giá trị từ ô tìm kiếm
        String searchText = txtSearch.getText().trim();

        // Kiểm tra nếu không nhập gì
        if (searchText.isEmpty()) {
            validatorSearch.setText("Vui lòng nhập ID công việc cần tìm!");
            validatorName.setBackground(Color.RED);
            return;
        }

        try {
            // Chuyển đổi ID từ chuỗi sang số
            int id = Integer.parseInt(searchText);

            // Kết nối cơ sở dữ liệu
            Connection con = conn.getConnection(); // Giả sử bạn đã có lớp `conn` để kết nối DB
            TaskDAO taskDAO = new TaskDAO();
            ResultSet rs = taskDAO.searchTaskById(con, id);

            // Lấy mô hình bảng
            DefaultTableModel model = (DefaultTableModel) TaskList.getModel();

            // Xóa toàn bộ dữ liệu trên bảng
            model.setRowCount(0);

            // Kiểm tra và hiển thị kết quả
            if (rs.next()) {
                // Lấy dữ liệu từ ResultSet
                String taskID = rs.getString("TASKID");
                String taskName = rs.getString("TASKNAME");
                String taskDesc = rs.getString("TASKDESC");
                String createdDate = rs.getString("CREATEDATE");
                String completedDate = rs.getString("DEADLINE");

                // Thêm dữ liệu vào bảng
                model.addRow(new Object[]{taskID, taskName, taskDesc, createdDate, completedDate});
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy công việc với ID: " + id);
            }

            // Đóng kết nối
            rs.close();
            con.close();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID phải là một số nguyên hợp lệ!");
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi cơ sở dữ liệu: " + e.getMessage());
        }
    }//GEN-LAST:event_txtSearchActionPerformed

    private void idInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idInputActionPerformed

    private void descInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descInputActionPerformed

    private void deadLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deadLineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deadLineActionPerformed

    private void createDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createDateActionPerformed

    private void addtaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtaskActionPerformed
        // TODO add your handling code here:
        String title = titleInput.getText().trim();
        String desc = descInput.getText().trim();
        String id = idInput.getText().trim();
        String createdate = createDate.getText().trim();
        String deadline = this.deadLine.getText().trim();
        if(title.isEmpty()){
            validatorName.setText("Vui lòng nhập tên công việc!");
            validatorName.setBackground(Color.RED);
        }
        else{
            validatorName.setText("");
        }
        if(desc.isEmpty()){
            validatordecs.setText("Vui lòng nhập mô tả công việc!");
        }
        else{
            validatordecs.setText("");
        }
        if(id.isEmpty()){
            validatorId.setText("Vui lòng nhập ID!");
        }

        int idTask = 0;
        try{
            idTask = Integer.parseInt(id);
        }catch(NumberFormatException e){
            validatorId.setText("Vui lòng nhập ID phải là số nguyên!");
        }
        try {
            new SimpleDateFormat("dd-MM-yyyy").parse(deadLine.getText().trim());
            deadlineValidator.setText("");
        } catch (ParseException e) {
            deadlineValidator.setText("Ngày không hợp lệ (dd-MM-yyyy)!");
            deadlineValidator.setForeground(Color.RED);
        }

        Task task = new Task(idTask,title,desc,createdate,deadline);
        try{
            TaskDAO taskDAO = new TaskDAO();
            boolean success = taskDAO.addTask(task);
            if(success){
                JOptionPane.showMessageDialog(null, "Task add successfull");
                showTask();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_addtaskActionPerformed

    private void deleteTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTaskActionPerformed
        // TODO add your handling code here:
        String id = idInput.getText().trim();
        int idTask=0;
        try{
            idTask = Integer.parseInt(id);
        }catch(NumberFormatException e){
            validatorId.setText("Vui lòng nhập ID phải là số nguyên!");
        }
        try{
            TaskDAO taskDAO = new TaskDAO();
            if(!taskDAO.isTaskExist(idTask)){
                JOptionPane.showMessageDialog(null, 
                        "Không tìm thấy công việc với mã ID " + idTask,
                        "Cảnh báo",
                        JOptionPane.WARNING_MESSAGE);
                return;
                
            }
            boolean success = taskDAO.deleteTask(idTask);
            if(success){
                JOptionPane.showMessageDialog(null, 
                        "Đã xóa công việc với mã ID" + idTask,
                        "Thông báo",
                        JOptionPane.INFORMATION_MESSAGE);
                showTask();
            }
            else{
                JOptionPane.showMessageDialog(null,
                        "Xóa công việc thất bại",
                        "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,
                    "Đã xảy ra lỗi " + e.getMessage(),
                    "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_deleteTaskActionPerformed

    private void updateTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTaskActionPerformed
        // TODO add your handling code here:
        String title = titleInput.getText().trim();
        String desc = descInput.getText().trim();
        String id = idInput.getText().trim();
        String createdate = createDate.getText().trim();
        String deadline = this.deadLine.getText().trim();
        if(title.isEmpty()){
            validatorName.setText("Vui lòng nhập tên công việc!");
            validatorName.setBackground(Color.RED);
        }
        else{
            validatorName.setText("");
        }
        if(desc.isEmpty()){
            validatordecs.setText("Vui lòng nhập mô tả công việc!");
            validatordecs.setBackground(Color.RED);
        }
        else{
            validatordecs.setText("");
        }
        if(id.isEmpty()){
            validatorId.setText("Vui lòng nhập ID!");
        }

        int idTask = 0;
        try{
            idTask = Integer.parseInt(id);
        }catch(NumberFormatException e){
            validatorId.setText("Vui lòng nhập ID phải là số nguyên!");
            validatorId.setBackground(Color.RED);
        }
        try {
            new SimpleDateFormat("dd-MM-yyyy").parse(deadLine.getText().trim());
            deadlineValidator.setText("");
        } catch (ParseException e) {
            deadlineValidator.setText("Ngày không hợp lệ (dd-MM-yyyy)!");
            deadlineValidator.setForeground(Color.RED);
        }
        Task task = new Task(idTask,title,desc,createdate,deadline);
        try{
            TaskDAO taskDAO = new TaskDAO();
            boolean success = taskDAO.updateTask(task);
            if(success){
                JOptionPane.showMessageDialog(null, 
                        "Đã sửa công việc có ID " +idTask,
                        "Thông báo",
                        JOptionPane.INFORMATION_MESSAGE);
                showTask();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,
                    "Sửa công việc có ID " + idTask + "thất bại!",
                    "Thông báo",
                    JOptionPane.WARNING_MESSAGE);
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_updateTaskActionPerformed

    private void showTask2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTask2ActionPerformed
                                          
        // TODO add your handling code here:
        try{
        DefaultTableModel model = (DefaultTableModel) TaskList.getModel();
        model.setRowCount(0);
        txtSearch.setText("");
        idInput.setText("");
        titleInput.setText("");
        descInput.setText("");
        deadLine.setText("");
        validatorId.setText("");
        validatorName.setText("");
        validatordecs.setText("");
        deadlineValidator.setText("");

        showTask();
        }catch(ClassCastException e){
            JOptionPane.showMessageDialog(this, "Tasklist khong su dung default table model","Loi",JOptionPane.ERROR_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Da xay ra loi khi tai du lieu!", "loi",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_showTask2ActionPerformed
    public void showDate(){
        java.util.Date d = new java.util.Date();
        SimpleDateFormat s = new SimpleDateFormat("dd-MM-yyyy");
        String dat = s.format(d);
        createDate.setText(dat);
    }
    private void signoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signoutActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        home n = new home();
        n.setVisible(true);
    }//GEN-LAST:event_signoutActionPerformed

    private void TaskListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaskListMouseClicked
        // TODO add your handling code here:
        int selectedRow = this.TaskList.getSelectedRow();
        if(selectedRow != -1){
            int idTask = (int) TaskList.getValueAt(selectedRow, 0);
            String taskName = (String) TaskList.getValueAt(selectedRow, 1);
            String taskDecs = (String) TaskList.getValueAt(selectedRow, 2);
            String taskCreDate = (String) TaskList.getValueAt(selectedRow, 3);
            String taskEndDate = (String) TaskList.getValueAt(selectedRow, 4);
            
            idInput.setText(String.valueOf(idTask));
            titleInput.setText(String.valueOf(taskName));
            descInput.setText(String.valueOf(taskDecs));
            createDate.setText(String.valueOf(taskCreDate));
            deadLine.setText(String.valueOf(taskEndDate));
        }
    }//GEN-LAST:event_TaskListMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TodoListMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TodoListMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TodoListMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TodoListMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TodoListMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TaskList;
    private javax.swing.JButton addtask;
    private javax.swing.JTextField createDate;
    private javax.swing.JTextField deadLine;
    private javax.swing.JLabel deadlineValidator;
    private javax.swing.JButton deleteTask;
    private javax.swing.JTextField descInput;
    private javax.swing.JTextField idInput;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton showTask2;
    private javax.swing.JButton signout;
    private javax.swing.JTextField titleInput;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JButton updateTask;
    private javax.swing.JLabel validatorId;
    private javax.swing.JLabel validatorName;
    private javax.swing.JLabel validatorSearch;
    private javax.swing.JLabel validatordecs;
    // End of variables declaration//GEN-END:variables
}
